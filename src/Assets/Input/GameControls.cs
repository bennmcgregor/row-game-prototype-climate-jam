//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/Input/GameControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameControls"",
    ""maps"": [
        {
            ""name"": ""RowingTest"",
            ""id"": ""9ea4a343-59ec-41bf-b12f-7d2f88525c3c"",
            ""actions"": [
                {
                    ""name"": ""CatchPress"",
                    ""type"": ""Button"",
                    ""id"": ""422b4de6-a9cd-4b0b-9f2f-ff29ff08c972"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CatchRelease"",
                    ""type"": ""Button"",
                    ""id"": ""4598b695-8247-4a21-95bf-a82d3a277ed0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""170d6c5e-221a-4abd-a74f-450a156b594a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RudderUpPress"",
                    ""type"": ""Button"",
                    ""id"": ""bbb434c4-eaea-46e9-aee2-df03574d2e65"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RudderUpRelease"",
                    ""type"": ""Button"",
                    ""id"": ""c4af8940-d6e2-4515-b694-6f7364e12936"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RudderDownPress"",
                    ""type"": ""Button"",
                    ""id"": ""6c3f8857-a884-44aa-9fb6-62ed11018266"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RudderDownRelease"",
                    ""type"": ""Button"",
                    ""id"": ""dd09be05-ec8c-423b-a098-2ac3ae0d53ab"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ReversePress"",
                    ""type"": ""Button"",
                    ""id"": ""7ace1d4d-477a-48b0-95b6-8df52609edda"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ReverseRelease"",
                    ""type"": ""Button"",
                    ""id"": ""b4118d9f-d7e0-4f4a-ac92-1f24a2d03e15"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""f681e2bc-b25b-4327-8d5e-52aa2331a4f7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2233b83e-8fea-437a-bd57-4ac3921ad223"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CatchPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e0b06e15-762b-497a-805f-be14369d05c3"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""58c517f4-f1e4-4860-b854-17fdafeefcf1"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RudderUpPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2142eaa9-0db5-4b4f-92ab-dc03878e679d"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RudderUpPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a18d17e4-b42d-430c-8a57-5cbc55feabc2"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RudderDownPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a94088b3-3915-4ba5-b771-b106c941f08e"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RudderDownPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eecab7b1-cdd4-4ddc-9024-00767effc0e0"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReversePress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1ce288ca-4b24-42a4-97b4-8cadb8a70dd9"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b224c7e3-d346-462a-8d7d-7372a48b5419"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CatchRelease"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f7bb491-724d-4bf7-8eb9-28597dca1d23"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RudderUpRelease"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""58a43044-93d5-4580-bc7e-6f0909ff4b39"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RudderUpRelease"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""103f4dae-bb3e-43db-a555-9a3cf67dd6d7"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RudderDownRelease"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cfd616b3-a1ab-4038-a0a0-226298c84d8e"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RudderDownRelease"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""57a77c79-b0f3-4200-897d-ecdcc3eb6806"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReverseRelease"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // RowingTest
        m_RowingTest = asset.FindActionMap("RowingTest", throwIfNotFound: true);
        m_RowingTest_CatchPress = m_RowingTest.FindAction("CatchPress", throwIfNotFound: true);
        m_RowingTest_CatchRelease = m_RowingTest.FindAction("CatchRelease", throwIfNotFound: true);
        m_RowingTest_Inventory = m_RowingTest.FindAction("Inventory", throwIfNotFound: true);
        m_RowingTest_RudderUpPress = m_RowingTest.FindAction("RudderUpPress", throwIfNotFound: true);
        m_RowingTest_RudderUpRelease = m_RowingTest.FindAction("RudderUpRelease", throwIfNotFound: true);
        m_RowingTest_RudderDownPress = m_RowingTest.FindAction("RudderDownPress", throwIfNotFound: true);
        m_RowingTest_RudderDownRelease = m_RowingTest.FindAction("RudderDownRelease", throwIfNotFound: true);
        m_RowingTest_ReversePress = m_RowingTest.FindAction("ReversePress", throwIfNotFound: true);
        m_RowingTest_ReverseRelease = m_RowingTest.FindAction("ReverseRelease", throwIfNotFound: true);
        m_RowingTest_Interact = m_RowingTest.FindAction("Interact", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // RowingTest
    private readonly InputActionMap m_RowingTest;
    private IRowingTestActions m_RowingTestActionsCallbackInterface;
    private readonly InputAction m_RowingTest_CatchPress;
    private readonly InputAction m_RowingTest_CatchRelease;
    private readonly InputAction m_RowingTest_Inventory;
    private readonly InputAction m_RowingTest_RudderUpPress;
    private readonly InputAction m_RowingTest_RudderUpRelease;
    private readonly InputAction m_RowingTest_RudderDownPress;
    private readonly InputAction m_RowingTest_RudderDownRelease;
    private readonly InputAction m_RowingTest_ReversePress;
    private readonly InputAction m_RowingTest_ReverseRelease;
    private readonly InputAction m_RowingTest_Interact;
    public struct RowingTestActions
    {
        private @GameControls m_Wrapper;
        public RowingTestActions(@GameControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @CatchPress => m_Wrapper.m_RowingTest_CatchPress;
        public InputAction @CatchRelease => m_Wrapper.m_RowingTest_CatchRelease;
        public InputAction @Inventory => m_Wrapper.m_RowingTest_Inventory;
        public InputAction @RudderUpPress => m_Wrapper.m_RowingTest_RudderUpPress;
        public InputAction @RudderUpRelease => m_Wrapper.m_RowingTest_RudderUpRelease;
        public InputAction @RudderDownPress => m_Wrapper.m_RowingTest_RudderDownPress;
        public InputAction @RudderDownRelease => m_Wrapper.m_RowingTest_RudderDownRelease;
        public InputAction @ReversePress => m_Wrapper.m_RowingTest_ReversePress;
        public InputAction @ReverseRelease => m_Wrapper.m_RowingTest_ReverseRelease;
        public InputAction @Interact => m_Wrapper.m_RowingTest_Interact;
        public InputActionMap Get() { return m_Wrapper.m_RowingTest; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(RowingTestActions set) { return set.Get(); }
        public void SetCallbacks(IRowingTestActions instance)
        {
            if (m_Wrapper.m_RowingTestActionsCallbackInterface != null)
            {
                @CatchPress.started -= m_Wrapper.m_RowingTestActionsCallbackInterface.OnCatchPress;
                @CatchPress.performed -= m_Wrapper.m_RowingTestActionsCallbackInterface.OnCatchPress;
                @CatchPress.canceled -= m_Wrapper.m_RowingTestActionsCallbackInterface.OnCatchPress;
                @CatchRelease.started -= m_Wrapper.m_RowingTestActionsCallbackInterface.OnCatchRelease;
                @CatchRelease.performed -= m_Wrapper.m_RowingTestActionsCallbackInterface.OnCatchRelease;
                @CatchRelease.canceled -= m_Wrapper.m_RowingTestActionsCallbackInterface.OnCatchRelease;
                @Inventory.started -= m_Wrapper.m_RowingTestActionsCallbackInterface.OnInventory;
                @Inventory.performed -= m_Wrapper.m_RowingTestActionsCallbackInterface.OnInventory;
                @Inventory.canceled -= m_Wrapper.m_RowingTestActionsCallbackInterface.OnInventory;
                @RudderUpPress.started -= m_Wrapper.m_RowingTestActionsCallbackInterface.OnRudderUpPress;
                @RudderUpPress.performed -= m_Wrapper.m_RowingTestActionsCallbackInterface.OnRudderUpPress;
                @RudderUpPress.canceled -= m_Wrapper.m_RowingTestActionsCallbackInterface.OnRudderUpPress;
                @RudderUpRelease.started -= m_Wrapper.m_RowingTestActionsCallbackInterface.OnRudderUpRelease;
                @RudderUpRelease.performed -= m_Wrapper.m_RowingTestActionsCallbackInterface.OnRudderUpRelease;
                @RudderUpRelease.canceled -= m_Wrapper.m_RowingTestActionsCallbackInterface.OnRudderUpRelease;
                @RudderDownPress.started -= m_Wrapper.m_RowingTestActionsCallbackInterface.OnRudderDownPress;
                @RudderDownPress.performed -= m_Wrapper.m_RowingTestActionsCallbackInterface.OnRudderDownPress;
                @RudderDownPress.canceled -= m_Wrapper.m_RowingTestActionsCallbackInterface.OnRudderDownPress;
                @RudderDownRelease.started -= m_Wrapper.m_RowingTestActionsCallbackInterface.OnRudderDownRelease;
                @RudderDownRelease.performed -= m_Wrapper.m_RowingTestActionsCallbackInterface.OnRudderDownRelease;
                @RudderDownRelease.canceled -= m_Wrapper.m_RowingTestActionsCallbackInterface.OnRudderDownRelease;
                @ReversePress.started -= m_Wrapper.m_RowingTestActionsCallbackInterface.OnReversePress;
                @ReversePress.performed -= m_Wrapper.m_RowingTestActionsCallbackInterface.OnReversePress;
                @ReversePress.canceled -= m_Wrapper.m_RowingTestActionsCallbackInterface.OnReversePress;
                @ReverseRelease.started -= m_Wrapper.m_RowingTestActionsCallbackInterface.OnReverseRelease;
                @ReverseRelease.performed -= m_Wrapper.m_RowingTestActionsCallbackInterface.OnReverseRelease;
                @ReverseRelease.canceled -= m_Wrapper.m_RowingTestActionsCallbackInterface.OnReverseRelease;
                @Interact.started -= m_Wrapper.m_RowingTestActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_RowingTestActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_RowingTestActionsCallbackInterface.OnInteract;
            }
            m_Wrapper.m_RowingTestActionsCallbackInterface = instance;
            if (instance != null)
            {
                @CatchPress.started += instance.OnCatchPress;
                @CatchPress.performed += instance.OnCatchPress;
                @CatchPress.canceled += instance.OnCatchPress;
                @CatchRelease.started += instance.OnCatchRelease;
                @CatchRelease.performed += instance.OnCatchRelease;
                @CatchRelease.canceled += instance.OnCatchRelease;
                @Inventory.started += instance.OnInventory;
                @Inventory.performed += instance.OnInventory;
                @Inventory.canceled += instance.OnInventory;
                @RudderUpPress.started += instance.OnRudderUpPress;
                @RudderUpPress.performed += instance.OnRudderUpPress;
                @RudderUpPress.canceled += instance.OnRudderUpPress;
                @RudderUpRelease.started += instance.OnRudderUpRelease;
                @RudderUpRelease.performed += instance.OnRudderUpRelease;
                @RudderUpRelease.canceled += instance.OnRudderUpRelease;
                @RudderDownPress.started += instance.OnRudderDownPress;
                @RudderDownPress.performed += instance.OnRudderDownPress;
                @RudderDownPress.canceled += instance.OnRudderDownPress;
                @RudderDownRelease.started += instance.OnRudderDownRelease;
                @RudderDownRelease.performed += instance.OnRudderDownRelease;
                @RudderDownRelease.canceled += instance.OnRudderDownRelease;
                @ReversePress.started += instance.OnReversePress;
                @ReversePress.performed += instance.OnReversePress;
                @ReversePress.canceled += instance.OnReversePress;
                @ReverseRelease.started += instance.OnReverseRelease;
                @ReverseRelease.performed += instance.OnReverseRelease;
                @ReverseRelease.canceled += instance.OnReverseRelease;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
            }
        }
    }
    public RowingTestActions @RowingTest => new RowingTestActions(this);
    public interface IRowingTestActions
    {
        void OnCatchPress(InputAction.CallbackContext context);
        void OnCatchRelease(InputAction.CallbackContext context);
        void OnInventory(InputAction.CallbackContext context);
        void OnRudderUpPress(InputAction.CallbackContext context);
        void OnRudderUpRelease(InputAction.CallbackContext context);
        void OnRudderDownPress(InputAction.CallbackContext context);
        void OnRudderDownRelease(InputAction.CallbackContext context);
        void OnReversePress(InputAction.CallbackContext context);
        void OnReverseRelease(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
    }
}
